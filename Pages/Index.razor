<!--   
    
      This file/webpage handles the access code verification required to access a hunt
      For now it consists only of a textbox and a button
      The user will enter their access code into the textbox and either press enter or the button on the page
      This access code will then be first verified to ensure it is a valid access code and then checked against the database to ensure the access code is present within the buchunt table
-->
@page "/"
@using team3.Data
@using team3.Interfaces
@using System.Text.RegularExpressions
@inject IPhoneNumbersService phoneNumberService
@inject NavigationManager NavManager
<PageTitle>Access Page</PageTitle>

<head>
    <link href="~/css/main.css" rel="stylesheet"/>
</head>

<div class="container">

    <EditForm EditContext="@context" OnSubmit="@SubmitEventHandler">

        <DataAnnotationsValidator />
        <h1>Please Enter Access Code</h1>
        <div class="row">
            <div class="col-md-12"> 
                <div class="row2" style="margin-top:15px">
                    <div class="col-md-4">
                        <label for="accessCode"></label>
                        <input type="text" style="text-align:center;" class="form-control" id="accessCode" @bind-value="@x.accessCode" placeholder="Enter Phone Number" />
                        <font style="color:gold;"><ValidationMessage For="@(()=>x.accessCode)" /></font>
                    </div>
                </div>
                <button type="submit" class="btn btn-info">Access Hunt</button>
            </div>
        </div>

     </EditForm>
</div>


@code{
    AccessPage x = new AccessPage();

    EditContext context;

    int counter;



    protected override Task OnInitializedAsync()
    {
        context = new EditContext(x);

        return base.OnInitializedAsync();
    }

    bool displayValidationErrorMessages = false;

    /// <summary>
    /// This method makes a call to the phoneNumberService class asking it to count the number of rows in the phonenumber table that are equal to the phone number entered
    /// Nothing is returned by this method, however the variable counter is set equal to the number of rows that are equal
    /// </summary>
    /// <param name="code"></param>
    /// <returns></returns>
    protected async Task CheckAgainstDB(string code)
    {
        counter = await phoneNumberService.Count(code);
    }

    /// <summary>
    ///This handles a button click event
    ///In the event that the button is clicked blazor first checks against the requiremetns set in AccessPage.cs
    ///If those requirements are fulfilled then the valid phone number in the text box is checked against the phonenumber table in the databse
    /// </summary>
    /// <param name="context"></param>
    private async Task SubmitEventHandler(EditContext context)
    {

        if (context.Validate())
        {
            await CheckAgainstDB(x.accessCode);
            if(counter > 0)
            {
                NavManager.NavigateTo("/counter");
            }
            else
            {
                
            }
        }
    }


    
}
